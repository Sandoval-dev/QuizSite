@model AccountCreateModel
@{
    ViewData["Title"] = "Register";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Register - Quiz360</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        :root {
            --primary-dark: #1a2a3a;
            --primary-light: #2d4a5a;
            --accent-teal: #3ab8a8;
            --accent-gold: #f0c14b;
            --accent-coral: #ff6b6b;
            --text-light: #f8f9fa;
            --text-dark: #343a40;
        }

        body {
            background: linear-gradient(135deg, var(--primary-dark), var(--primary-light));
            font-family: 'Poppins', sans-serif;
            color: var(--text-light);
            min-height: 100vh;
            overflow-x: hidden;
        }

        .container {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 0 15px;
            position: relative;
        }

        .bg-pattern {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                radial-gradient(circle at 25% 25%, rgba(58, 184, 168, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 75% 75%, rgba(240, 193, 75, 0.1) 0%, transparent 50%);
            z-index: 0;
            pointer-events: none;
        }

        .card {
            background-color: rgba(255, 255, 255, 0.95);
            color: var(--text-dark);
            border: none;
            border-radius: 16px;
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(5px);
            width: 100%;
            max-width: 450px;
            padding: 2.5rem;
            position: relative;
            overflow: hidden;
            z-index: 1;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25);
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--accent-teal), var(--accent-gold), var(--accent-coral));
            animation: rainbow 8s linear infinite;
            background-size: 400% 100%;
        }

        @@keyframes rainbow {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        .quiz-logo {
            font-size: 3.5rem;
            font-weight: 800;
            background: linear-gradient(135deg, var(--accent-teal), var(--accent-gold), var(--accent-coral));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
            letter-spacing: 1px;
            margin-bottom: 0.5rem;
            position: relative;
            animation: fadeInDown 1s ease-out;
        }

        .quiz-logo::after {
            content: '';
            display: block;
            width: 60px;
            height: 4px;
            background: linear-gradient(90deg, var(--accent-teal), var(--accent-gold));
            margin: 0.8rem auto;
            border-radius: 2px;
            animation: underlineGrow 1.5s ease-out forwards;
        }

        @@keyframes underlineGrow {
            from {
                width: 0;
                opacity: 0;
            }
            to {
                width: 60px;
                opacity: 1;
            }
        }

        .quiz-slogan {
            font-size: 1.3rem;
            font-weight: 600;
            color: var(--accent-gold);
            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
            margin-bottom: 2rem;
            text-align: center;
            animation: fadeIn 1.5s ease forwards;
            opacity: 0;
            animation-delay: 0.5s;
        }

        @@keyframes fadeIn {
            to {
                opacity: 1;
            }
        }

        h3 {
            color: var(--primary-dark);
            font-weight: 700;
            margin-bottom: 1.8rem;
            position: relative;
            animation: fadeIn 0.8s ease-out 0.3s both;
        }

        .form-group {
            margin-bottom: 1.5rem;
            animation: fadeIn 0.8s ease-out 0.4s both;
        }

        .form-label {
            font-weight: 600;
            color: var(--primary-light);
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--accent-teal);
            box-shadow: 0 0 0 0.25rem rgba(58, 184, 168, 0.25);
            outline: none;
        }

        .btn-register {
            background: linear-gradient(135deg, var(--accent-gold), var(--accent-coral));
            border: none;
            border-radius: 8px;
            padding: 0.75rem;
            font-weight: 600;
            font-size: 1.1rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            color: white;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(240, 193, 75, 0.3);
            margin-top: 1rem;
            animation: fadeIn 0.8s ease-out 0.6s both;
        }

        .btn-register:hover {
            background: linear-gradient(135deg, var(--accent-coral), var(--accent-teal));
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);
        }

        .btn-register:active {
            transform: translateY(0);
        }

        .text-danger {
            color: var(--accent-coral) !important;
            font-size: 0.85rem;
            margin-top: 0.25rem;
            display: block;
        }

        .links-container {
            margin-top: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            animation: fadeIn 0.8s ease-out 0.7s both;
        }

        .link-item {
            text-align: center;
            position: relative;
        }

        .link-item a {
            color: var(--accent-teal);
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
            padding-bottom: 2px;
        }

        .link-item a:hover {
            color: var(--accent-coral);
        }

        .link-item a::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: var(--accent-coral);
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .link-item a:hover::after {
            width: 100%;
        }

        .password-strength {
            margin-top: 0.5rem;
            height: 5px;
            background-color: #e9ecef;
            border-radius: 3px;
            overflow: hidden;
            position: relative;
        }

        .password-strength-bar {
            height: 100%;
            width: 0;
            background: linear-gradient(90deg, #ff6b6b, #f0c14b, #3ab8a8);
            transition: width 0.3s ease, background-color 0.3s ease;
        }

        .floating-elements {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 0;
            pointer-events: none;
        }

        .floating-element {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 15s infinite linear;
        }

        @@keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-1000px) rotate(720deg);
                opacity: 0;
            }
        }

        /* Responsive adjustments */
        @@media (max-width: 576px) {
            .card {
                padding: 1.5rem;
            }
            
            .quiz-logo {
                font-size: 2.5rem;
            }
            
            .quiz-slogan {
                font-size: 1.1rem;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="bg-pattern"></div>
        
        <!-- Floating background elements -->
        <div class="floating-elements">
            <div class="floating-element" style="width: 40px; height: 40px; top: 10%; left: 15%; animation-delay: 0s;"></div>
            <div class="floating-element" style="width: 25px; height: 25px; top: 70%; left: 85%; animation-delay: 2s;"></div>
            <div class="floating-element" style="width: 30px; height: 30px; top: 85%; left: 25%; animation-delay: 4s;"></div>
            <div class="floating-element" style="width: 50px; height: 50px; top: 20%; left: 65%; animation-delay: 6s;"></div>
        </div>

        <h1 class="quiz-logo animate__animated animate__fadeInDown">
            Quiz360
        </h1>
        <p class="quiz-slogan">Bilmen gereken her şey!</p>

        <div class="card shadow">
            <h3 class="text-center">Hemen Hesap Oluştur</h3>
            @await Html.PartialAsync("Partials/Site/_Message")
            <form asp-controller="Account" asp-action="Create" method="post" novalidate>
                <div class="form-group">
                    <label asp-for="Email" class="form-label">Email Adresi</label>
                    <input asp-for="Email" class="form-control" autocomplete="email" />
                    <span asp-validation-for="Email" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Password" class="form-label">Şifre</label>
                    <input asp-for="Password" class="form-control" type="password" autocomplete="new-password"  id="passwordInput" />
                    <div class="password-strength">
                        <div class="password-strength-bar" id="passwordStrength"></div>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="form-label">Şifre Tekrarı</label>
                    <input asp-for="ConfirmPassword" class="form-control" type="password" autocomplete="new-password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                </div>

                <button type="submit" class="btn btn-register w-100">
                    <i class="fas fa-user-plus me-2"></i> Kaydol
                </button>

                <div class="links-container">
                    <div class="link-item">
                        <a asp-action="Login">Zaten hesabınız var mı? Giriş Yapın</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Password strength indicator
        const passwordInput = document.getElementById('passwordInput');
        const passwordStrength = document.getElementById('passwordStrength');
        
        passwordInput.addEventListener('input', function() {
            const password = this.value;
            let strength = 0;
            
            // Length check
            if (password.length > 7) strength += 1;
            if (password.length > 11) strength += 1;
            
            // Character variety
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            // Update strength bar
            const width = strength * 20;
            passwordStrength.style.width = width + '%';
            
            // Update color based on strength
            if (strength <= 2) {
                passwordStrength.style.background = 'linear-gradient(90deg, #ff6b6b, #ff6b6b)';
            } else if (strength <= 4) {
                passwordStrength.style.background = 'linear-gradient(90deg, #ff6b6b, #f0c14b)';
            } else {
                passwordStrength.style.background = 'linear-gradient(90deg, #f0c14b, #3ab8a8)';
            }
        });
        
        // Add animation class when elements come into view
        document.addEventListener('DOMContentLoaded', function() {
            const animateElements = document.querySelectorAll('.animate-on-scroll');
            
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                        observer.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.1 });
            
            animateElements.forEach(el => observer.observe(el));
        });
    </script>
</body>

</html>