@model AccountResetPasswordModel

@{
    ViewData["Title"] = "Reset Password";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - Quiz360</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        :root {
            --primary-dark: #1a2a3a;
            --primary-light: #2d3e50;
            --accent-teal: #00c9b7;
            --accent-orange: #ff7b54;
            --accent-yellow: #ffd166;
            --text-light: #f8f9fa;
            --text-dark: #212529;
        }

        body {
            background: linear-gradient(135deg, var(--primary-dark), var(--primary-light));
            font-family: 'Poppins', 'Segoe UI', sans-serif;
            color: var(--text-light);
            margin: 0;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 1rem;
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(0, 201, 183, 0.1) 0%, transparent 20%),
                radial-gradient(circle at 90% 80%, rgba(255, 123, 84, 0.1) 0%, transparent 20%);
        }

        .reset-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            color: var(--text-dark);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2), 
                        0 5px 15px rgba(0, 0, 0, 0.1);
            max-width: 450px;
            width: 100%;
            padding: 2.5rem;
            animation: fadeInUp 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            border: 1px solid rgba(255, 255, 255, 0.3);
            position: relative;
            overflow: hidden;
        }

        .reset-card::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                transparent 0%,
                rgba(0, 201, 183, 0.05) 50%,
                transparent 100%
            );
            transform: rotate(30deg);
            z-index: -1;
        }

        .reset-title {
            font-weight: 700;
            font-size: 1.8rem;
            text-align: center;
            margin-bottom: 1.5rem;
            color: var(--accent-teal);
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .reset-title::after {
            content: '';
            display: block;
            width: 60px;
            height: 4px;
            background: var(--accent-orange);
            margin: 0.5rem auto;
            border-radius: 2px;
            animation: stretch 1.5s ease-in-out infinite alternate;
        }

        p.reset-desc {
            font-size: 0.95rem;
            text-align: center;
            color: #666;
            margin-bottom: 2rem;
            line-height: 1.6;
        }

        .form-label {
            font-weight: 600;
            color: var(--primary-light);
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label::before {
            content: '•';
            color: var(--accent-teal);
            margin-right: 8px;
            font-size: 1.2rem;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
            box-shadow: none;
        }

        .form-control:focus {
            border-color: var(--accent-teal);
            box-shadow: 0 0 0 0.25rem rgba(0, 201, 183, 0.25);
            transform: translateY(-2px);
        }

        .input-group-text {
            background-color: var(--accent-teal);
            color: white;
            border: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--accent-teal), #00a896);
            border: none;
            font-weight: 600;
            transition: all 0.3s ease;
            padding: 0.75rem;
            border-radius: 8px;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            font-size: 0.9rem;
            box-shadow: 0 4px 15px rgba(0, 201, 183, 0.3);
            position: relative;
            overflow: hidden;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #00a896, var(--accent-teal));
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 201, 183, 0.4);
        }

        .btn-primary:active {
            transform: translateY(1px);
        }

        .btn-primary::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(30deg);
            transition: all 0.3s ease;
        }

        .btn-primary:hover::after {
            left: 100%;
        }

        .text-danger {
            font-size: 0.85rem;
            display: block;
            margin-top: 0.5rem;
            color: #dc3545;
            animation: shake 0.5s ease-in-out;
        }

        .back-link {
            margin-top: 1.5rem;
            text-align: center;
            font-size: 0.9rem;
        }

        .back-link a {
            color: var(--accent-orange);
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
        }

        .back-link a:hover {
            color: #ff6347;
            text-decoration: none;
            transform: translateX(-3px);
        }

        .back-link a::before {
            content: '←';
            margin-right: 5px;
            transition: all 0.3s ease;
        }

        .back-link a:hover::before {
            transform: translateX(-5px);
        }

        .password-strength {
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            margin-top: 0.5rem;
            overflow: hidden;
            position: relative;
        }

        .password-strength::after {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 0;
            background: var(--accent-teal);
            transition: width 0.5s ease;
        }

        .password-hints {
            font-size: 0.75rem;
            color: #6c757d;
            margin-top: 0.5rem;
        }

        .password-hints ul {
            padding-left: 1.25rem;
            margin-bottom: 0;
        }

        .password-hints li {
            margin-bottom: 0.25rem;
        }

        .password-hints li.valid {
            color: var(--accent-teal);
        }

        .password-hints li.valid::before {
            content: '✓ ';
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes stretch {
            0% {
                transform: scaleX(0.8);
                opacity: 0.6;
            }
            100% {
                transform: scaleX(1.2);
                opacity: 1;
            }
        }

        @@keyframes shake {
            0%, 100% {
                transform: translateX(0);
            }
            20%, 60% {
                transform: translateX(-5px);
            }
            40%, 80% {
                transform: translateX(5px);
            }
        }

        @@keyframes pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(0, 201, 183, 0.7);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(0, 201, 183, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(0, 201, 183, 0);
            }
        }

        /* Responsive adjustments */
        @@media (max-width: 576px) {
            .reset-card {
                padding: 1.5rem;
            }
            
            .reset-title {
                font-size: 1.5rem;
            }
        }
    </style>
</head>

<body>
    <div class="reset-card animate__animated animate__fadeIn">
        <div class="reset-title">Şifre Sıfırlama</div>
        <p class="reset-desc">Hesap güvenliğiniz için güçlü bir şifre belirleyin. Şifreniz en az 8 karakter uzunluğunda olmalı ve özel karakterler içermelidir.</p>
        
        @await Html.PartialAsync("Partials/Site/_Message")
        
        <form method="post" asp-controller="Account" asp-action="ResetPassword" novalidate>
            <input type="hidden" asp-for="Token" />
            <input type="hidden" asp-for="Email" />

            <div class="mb-4">
                <label asp-for="Password" class="form-label">Yeni Şifre</label>
                <input asp-for="Password" type="password" class="form-control" placeholder="En az 8 karakter" 
                       id="passwordField" autocomplete="new-password" />
                <div class="password-strength" id="passwordStrength"></div>
                <div class="password-hints" id="passwordHints">
                    <ul>
                        <li id="lengthHint">En az 8 karakter</li>
                        <li id="upperHint">Büyük harf içermeli</li>
                        <li id="numberHint">Rakam içermeli</li>
                        <li id="specialHint">Özel karakter içermeli</li>
                    </ul>
                </div>
                <span asp-validation-for="Password" class="text-danger small"></span>
            </div>

            <div class="mb-4">
                <label asp-for="ConfirmPassword" class="form-label">Şifreyi Onayla</label>
                <input asp-for="ConfirmPassword" type="password" class="form-control" 
                       placeholder="Şifrenizi tekrar girin" autocomplete="new-password" />
                <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
            </div>

            <button type="submit" class="btn btn-primary w-100 animate__animated animate__pulse animate__infinite animate__slower">
                <i class="fas fa-sync-alt me-2"></i> Şifreyi Güncelle
            </button>
        </form>

        <div class="back-link animate__animated animate__fadeIn animate__delay-1s">
            <a asp-action="Login"><i class="fas fa-arrow-left me-2"></i>Giriş sayfasına dön</a>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Password strength indicator
        const passwordField = document.getElementById('passwordField');
        const passwordStrength = document.getElementById('passwordStrength');
        const passwordHints = {
            lengthHint: document.getElementById('lengthHint'),
            upperHint: document.getElementById('upperHint'),
            numberHint: document.getElementById('numberHint'),
            specialHint: document.getElementById('specialHint')
        };

        passwordField.addEventListener('input', function() {
            const password = this.value;
            let strength = 0;
            
            // Check password length
            if (password.length >= 8) {
                strength += 25;
                passwordHints.lengthHint.classList.add('valid');
            } else {
                passwordHints.lengthHint.classList.remove('valid');
            }
            
            // Check for uppercase letters
            if (/[A-Z]/.test(password)) {
                strength += 25;
                passwordHints.upperHint.classList.add('valid');
            } else {
                passwordHints.upperHint.classList.remove('valid');
            }
            
            // Check for numbers
            if (/[0-9]/.test(password)) {
                strength += 25;
                passwordHints.numberHint.classList.add('valid');
            } else {
                passwordHints.numberHint.classList.remove('valid');
            }
            
            // Check for special characters
            if (/[^A-Za-z0-9]/.test(password)) {
                strength += 25;
                passwordHints.specialHint.classList.add('valid');
            } else {
                passwordHints.specialHint.classList.remove('valid');
            }
            
            // Update strength bar
            passwordStrength.style.width = strength + '%';
            passwordStrength.style.backgroundColor = getStrengthColor(strength);
        });

        function getStrengthColor(strength) {
            if (strength < 50) return '#ff4d4d';
            if (strength < 75) return '#ffcc00';
            return '#00c9b7';
        }
    </script>
</body>

</html>