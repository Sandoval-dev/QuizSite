@model QuestionEditModel
@{
    ViewData["Title"] = "Soru Düzenle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    :root {
        --charcoal: #264653;
        --persian-green: #2a9d8f;
        --saffron: #e9c46a;
        --sandy-brown: #f4a261;
        --burnt-sienna: #e76f51;
        --light-gray: #f8f9fa;
        --medium-gray: #e9ecef;
        --dark-gray: #495057;
        --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        --transition: all 0.3s ease;
    }

    body {
        background-color: #f5f7fa;
    }

    .edit-container {
        max-width: 800px;
        margin: 2rem auto;
        animation: fadeIn 0.5s ease-out;
    }

    .card {
        border: none;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: var(--card-shadow);
        transition: var(--transition);
    }

    .card:hover {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        background: linear-gradient(135deg, var(--persian-green), var(--charcoal));
        color: white;
        padding: 1.5rem;
        border-bottom: none;
    }

    .card-header h4 {
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .card-body {
        padding: 2rem;
        background-color: white;
    }

    .form-label {
        font-weight: 500;
        color: var(--charcoal);
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid var(--medium-gray);
        padding: 0.75rem 1rem;
        transition: var(--transition);
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--persian-green);
        box-shadow: 0 0 0 3px rgba(42, 157, 143, 0.2);
    }

    textarea.form-control {
        min-height: 120px;
    }

    .option-item {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .option-number {
        position: absolute;
        left: -30px;
        top: 10px;
        width: 24px;
        height: 24px;
        background-color: var(--saffron);
        color: var(--charcoal);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.8rem;
    }

    .divider {
        border-top: 2px dashed var(--medium-gray);
        margin: 2rem 0;
        position: relative;
    }

    .divider-text {
        position: absolute;
        top: -12px;
        left: 50%;
        transform: translateX(-50%);
        background-color: white;
        padding: 0 1rem;
        color: var(--persian-green);
        font-weight: 600;
    }

    .btn-outline-secondary {
        border-color: var(--medium-gray);
        color: var(--dark-gray);
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        transition: var(--transition);
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-outline-secondary:hover {
        background-color: var(--medium-gray);
        color: var(--charcoal);
        transform: translateX(-3px);
    }

    .btn-success {
        background-color: var(--persian-green);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        transition: var(--transition);
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-success:hover {
        background-color: var(--charcoal);
        transform: translateY(-3px);
        box-shadow: 0 4px 12px rgba(42, 157, 143, 0.3);
    }

    .text-danger {
        color: var(--burnt-sienna);
        font-size: 0.85rem;
        margin-top: 0.25rem;
    }

    /* Animations */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    .pulse-on-hover:hover {
        animation: pulse 1.5s infinite;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .card-body {
            padding: 1.5rem;
        }
        
        .option-number {
            left: -25px;
        }
    }
</style>

<div class="edit-container">
    <div class="card">
        <div class="card-header">
            <h4><i class="fas fa-question-circle"></i> Soru Düzenle</h4>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post">
                <input type="hidden" asp-for="Id" />

                <!-- Question Text -->
                <div class="mb-4">
                    <label asp-for="Text" class="form-label">
                        <i class="fas fa-paragraph"></i> Soru Metni
                    </label>
                    <textarea asp-for="Text" class="form-control" rows="4" 
                        placeholder="Soru metnini buraya yazın..."></textarea>
                    <span asp-validation-for="Text" class="text-danger"></span>
                </div>

                <!-- Category -->
                <div class="mb-4">
                    <label asp-for="CategoryId" class="form-label">
                        <i class="fas fa-tag"></i> Kategori
                    </label>
                    <select asp-for="CategoryId" asp-items="Model.Categories" class="form-select">
                        <option value="">Kategori seçin</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>

                <!-- Divider -->
                <div class="divider">
                    <span class="divider-text">CEVAP SEÇENEKLERİ</span>
                </div>

                <!-- Answer Options -->
                @for (int i = 0; i < Model.Options.Count; i++)
                {
                    <div class="option-item">
                        <span class="option-number">@(i+1)</span>
                        <label class="form-label">Seçenek @(i + 1)</label>
                        <input asp-for="Options[@i].Text" class="form-control" 
                            placeholder="Seçenek metnini girin..." />
                        <span asp-validation-for="Options[@i].Text" class="text-danger"></span>
                    </div>
                }

                <!-- Correct Option -->
                <div class="mb-4">
                    <label asp-for="CorrectOptionIndex" class="form-label">
                        <i class="fas fa-check-circle"></i> Doğru Cevap
                    </label>
                    <select asp-for="CorrectOptionIndex" class="form-select">
                        @for (int i = 0; i < 4; i++)
                        {
                            <option value="@i">Seçenek @(i + 1)</option>
                        }
                    </select>
                    <span asp-validation-for="CorrectOptionIndex" class="text-danger"></span>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-between mt-5">
                    <a asp-action="Index" class="btn btn-outline-secondary pulse-on-hover">
                        <i class="fas fa-arrow-left"></i> Listeye Dön
                    </a>
                    <button type="submit" class="btn btn-success pulse-on-hover">
                        <i class="fas fa-save"></i> Değişiklikleri Kaydet
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Seçenek alanlarına odaklanıldığında animasyon ekle
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'translateX(5px)';
            });
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'translateX(0)';
            });
        });
    </script>
}